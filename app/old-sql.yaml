

kind: Service
apiVersion: v1
metadata:
  name: old-sql
  namespace: api
spec:
  selector:
    app: old-sql
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      name: micro
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: old-sql
  namespace: api
  labels:
    app: old-sql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: old-sql
  template:
    metadata:
      labels:
        app: old-sql
    spec:
      serviceAccountName: micro-services
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
        - name: old-sql
          image: gmsa/old-sql:latest
          imagePullPolicy: Always
          command: [
            "service",
            "--selector=static",
            "--server_address=:8080",
          ]
          env:
            - name: DB_HOST
              value: "172.16.2.2"
            - name: "DB_PORT"
              value: "71433"
            - name: DB_USER
              value: "sa"
            - name: DB_PASSWORD
              value: "123456"
            - name: DB_NAME
              value: "stmis1"
          ports:
          - containerPort: 8080
            name: micro
            protocol: TCP
        - name: health
          image: microhq/health:kubernetes
          command: [
            "/health",
            "--health_address=0.0.0.0:8081",
            "--server_name=old-sql",
            "--server_address=0.0.0.0:8080"
          ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
